// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.154.0/containers/dotnet
{
	"name": "eShopOnContainers",
	"build": {
		"dockerfile": "Dockerfile",
		"args": { 
			// Update 'VARIANT' to pick a .NET Core version: 2.1, 3.1, 5.0
			"VARIANT": "5.0",
			// Base Image Options
			"INSTALL_NODE": "false",
			"INSTALL_AZURE_CLI": "true",
			// Terraform variables
			"INSTALL_TERRAFORM": "true",
			"TERRAFORM_VERSION": "0.14.3",
			"TFLINT_VERSION": "0.22.0",
			// Kubectl Helm variables
			"INSTALL_KUBECTL_HELM": "true",
			// Docker variables
			"INSTALL_DOCKER": "true"
		}
	},
	"runArgs": [
		"--env-file", "${localWorkspaceFolder}/.env"
	],
	"remoteEnv": {
		// Sets computed environment variables required for terrafom remote backend
		"TF_BACKEND_RESOURCE_GROUP" : "rg-${containerEnv:ESHOP_APP}-trfrm-${containerEnv:ESHOP_ENV}-${containerEnv:ESHOP_LOCATION_SHORT}",
		"TF_BACKEND_LOCATION": "${containerEnv:ESHOP_LOCATION}",
		"TF_BACKEND_STORAGE_ACCOUNT" : "st${containerEnv:ESHOP_APP}trfrm${containerEnv:ESHOP_ENV}${containerEnv:ESHOP_LOCATION_SHORT}",                
		"TF_BACKEND_CONTAINER" : "${containerEnv:ESHOP_CONTAINER}",
		"TF_BACKEND_KEY" : "master.tfstate",
		
		// Sets computed input variables for terraform templates
		"TF_VAR_env" : "${containerEnv:ESHOP_ENV}",
		"TF_VAR_location" : "${containerEnv:ESHOP_LOCATION}",
		"TF_VAR_location_suffix" : "${containerEnv:ESHOP_LOCATION_SHORT}",
		"TF_VAR_app": "${containerEnv:ESHOP_APP}",
		"TF_VAR_acr" : "${containerEnv:ESHOP_ACR_NAME}",
		"TF_VAR_acr_rg" : "${containerEnv:ESHOP_ACR_RG_NAME}"
	},


		// Logs into configured azure tenant 
	// Sets the configured subscription as the default subscription
	// Grants execute on create-backend.sh script
	// "postCreateCommand": "az login -t $ARM_TENANT_ID -u $ARM_USERNAME -p $ARM_PASSWORD && az account set -s $ARM_SUBSCRIPTION_ID",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.shell.linux": "/bin/bash",
		"terraform.languageServer": {
			"enabled": true,
			"args": []
		},
		"terraform.indexing": {
			"enabled": false,
			"liveIndexing": false
		},
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-dotnettools.csharp",
		"hashicorp.terraform",
		"ms-vscode.azurecli"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [5000, 5001],

	// [Optional] To reuse of your local HTTPS dev cert:
	//
	// 1. Export it locally using this command:
	//    * Windows PowerShell:
	//        dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	//    * macOS/Linux terminal:
	//        dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	// 
	// 2. Uncomment these 'remoteEnv' lines:
	//    "remoteEnv": {
	// 	      "ASPNETCORE_Kestrel__Certificates__Default__Password": "SecurePwdGoesHere",
	//        "ASPNETCORE_Kestrel__Certificates__Default__Path": "/home/vscode/.aspnet/https/aspnetapp.pfx",
	//    },
	//
	// 3. Do one of the following depending on your scenario:
	//    * When using GitHub Codespaces and/or Remote - Containers:
	//      1. Start the container
	//      2. Drag ~/.aspnet/https/aspnetapp.pfx into the root of the file explorer
	//      3. Open a terminal in VS Code and run "mkdir -p /home/vscode/.aspnet/https && mv aspnetapp.pfx /home/vscode/.aspnet/https"
	//
	//    * If only using Remote - Containers with a local container, uncomment this line instead:
	//      "mounts": [ "source=${env:HOME}${env:USERPROFILE}/.aspnet/https,target=/home/vscode/.aspnet/https,type=bind" ],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "dotnet restore",

	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}
